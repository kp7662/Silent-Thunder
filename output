#include <stdio.h>
#include <ctype.h>
enum Statetype {START, MAYBE_COMMENT, IN_COMMENT, END_COMMENT, 
STRING_LITERAL, CHAR_LITERAL, STRING_ESCAPE, CHAR_ESCAPE, 
END, ERROR};

int lineNum = 0;

enum Statetype
handleStartState (int c)
{
    enum Statetype state;
    if (c == '/') state = MAYBE_COMMENT;
    else if (c == '\"') state = STRING_LITERAL;
    else if (c == '\'') state = CHAR_LITERAL;
    else if (c == '\n') lineNum++;
    else { 
        putchar(c); 
        state = START;
    }
    return state;
}

handleMaybeCommentState (int c)
{
    enum Statetype state;
    if (c == '*') { 
        putchar(" ");  
        state = IN_COMMENT;
    }
    else if (c == '/') {
        putchar(c);
        state = MAYBE_COMMENT;
    }
    else if (c == '\n') lineNum++;
    else if (c == EOF) state = END;
    else {
        putchar('/');
        putchar(c);
        state = START;
    }
    return state;
}

handleInCommentState (int c)
{
    enum Statetype state;
    if (c == '*') state = END_COMMENT;
    else if (c == '\n') lineNum++;
    else if (c == EOF) state = ERROR;
    else state = IN_COMMENT;
    return state;
}

handleEndCommentState (int c)
{
    enum Statetype state;
    if (c == '/') state = START;
    else if (c == '*') state = END_COMMENT;
    else if (c == '\n') lineNum++;
    else if (c == EOF) state = ERROR;
    else state = IN_COMMENT;
    return state;
}

handleStringLiteralState (int c)
{
    enum Statetype state;
    if (c == '\"') {
        putchar(c);
        state = START;
    }
    else if (c == '\\') state = STRING_ESCAPE;
    else if (c == '\n') lineNum++;
    else if (c == EOF) state = END;
    else {
        putchar(c);
        state = STRING_LITERAL;
    }
    return state;
}

handleStringEscapeState (int c)
{
    enum Statetype state;
    if (c == '\n') lineNum++;
    else if (c == EOF) state = END;
    else state = STRING_LITERAL;
    return state;
}

handleCharLiteralState (int c)
{
    enum Statetype state;
    if (c == '\'') {
        putchar(c);
        state = START;
    }
    else if (c == '\\') state = CHAR_ESCAPE;
    else if (c == '\n') lineNum++;
    else if (c == EOF) state = END;
    else {
        putchar(c);
        state = CHAR_LITERAL;
    }
    return state;
}

handleCharEscapeState (int c)
{
    enum Statetype state;
    if (c == '\n') lineNum++;
    else if (c == EOF) state = END;
    else state = CHAR_LITERAL;
    return state;
}

handleEndState (void) {
    return 0;
}

handleErrorState (void) {
    printf("Error: line %d: unterminated comment", lineNum);
    return 1;
}

int main (void)
{
    int c;
    enum Statetype state = START;
    while ((c = getchar()) != EOF) {
        switch(state) {
            case START:
                state = handleStartState(c);
                break;
            case MAYBE_COMMENT:
                state = handleMaybeCommentState(c);
                break;
            case IN_COMMENT:
                state = handleInCommentState(c);
                break;
            case END_COMMENT:
                state = handleEndCommentState(c);
                break;
            case STRING_LITERAL:
                state = handleStringLiteralState(c);
                break;
            case STRING_ESCAPE:
                state = handleStringEscapeState(c);
                break;
            case CHAR_LITERAL:
                state = handleCharLiteralState(c);
                break;
            case CHAR_ESCAPE:
                state = handleCharEscapeState(c);
                break;
            case END:
                state = handleEndState();
                break;
            case ERROR:
                state = handleErrorState();
                break;
        }
    }
    return 0;
}

